#!/bin/sh
# Prime Mover build script
#
# Â© 2006 David Given.
# Prime Mover is licensed under the MIT open source license. To get the full
# license text, see the README file.
#
# $Id$

set -e

TEMPFILE=/tmp/build.$$

embed() {
	cat > $TEMPFILE
	echo "XXXXSTART$1"
	wc -c $TEMPFILE | cut -d' ' -f1
	cat $TEMPFILE
	echo ""
}

make_interpreter() {
	cd lua
	lua ../build-tools/collapse.lua *.c | cobfusc -dem
}

make_pm() {
	echo "Making $3..."
	mkdir -p bin
	(
		sed -e "s!%%%EXTRACTOR%%%!$2!" < src/shell
		cat src/pm | sh -c "$1" | embed script
		make_interpreter | sh -c "$1" | embed interpreter
	) > bin/$3
	chmod a+rx bin/$3
}

run_unit_test() {
	echo "Running test $1..."
	rm -f ERROR RESULT OUT DATA*
	# Strange next line to prevent failures on error condition.
	( ../bin/pm_uncompressed -p -f "$1" 2> ERROR 1>&2 ) && true
	touch OUT
	[ -f ERROR ] && (cat ERROR >> OUT)
	[ -f RESULT ] && (cat RESULT >> OUT)
	if ! diff -uN OUT "${1%.pm}.good"; then
		echo "Test failed"
		exit 1
	fi
	rm -f ERROR RESULT OUT DATA*
}

make_pm "cat" "cat" "pm_uncompressed"
make_pm "gzip -9c" "zcat" "pm_8bit"
make_pm "gzip -9c | uuencode out" "uudecode -o /dev/stdout | zcat" "pm_7bit"

cd tests
../bin/pm_uncompressed -p -f startup.pm
for n in *.pm; do
	run_unit_test "$n"
done
